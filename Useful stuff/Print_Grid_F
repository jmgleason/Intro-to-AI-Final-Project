//Display NxN queen grid
//It displays from left to right and from top to bottom
//(x, y) = (0, 0) is the bottom-left corner
void PrintGrid( QueenGrid qg ){

    /* y-axis interation */
    for( int y=numOfQueens-1; y>=0; --y ){
        
        /* Display the first top border */
        if( y==numOfQueens-1 ){

            //Display 'y' axis
            std::cout<<'y'<<'\n';
            
            //just diff display style depending on num of digits
            if(numOfQueens>=100){ std::cout<<"    |";}
            else if(numOfQueens>=10){ std::cout<<"   |";}
            else { std::cout<<"  |"; }

            for( int i=0; i<numOfQueens-1; ++i ){ std::cout<<"---+";}  
            std::cout<<"---|\n"; 
        }

        /* x-axis iteration -> Display 'X' if Queen is active, else blank */
        //just diff display style depending on num of digits
        if(numOfQueens>=100){ if(y+1>100){ std::cout<<y+1<<" |"; } else if(y+1>=10){ std::cout<<y+1<<"  |"; } else { std::cout<<y+1<<"   |"; }}
        else if(numOfQueens>=10){ if(y+1>=10){ std::cout<<y+1<<" |"; } else { std::cout<<y+1<<"  |"; }}
        else { std::cout<<y+1<<" |"; }

        for( int x=0; x<numOfQueens; ++x ){
            if( qg.Grid[x][y].active == true ){
                std::cout<<" X "<<"|";
            }
            else {
                std::cout<<"   "<<"|";
            }
        }

        /* Display the bottom border */
        //just diff display style depending on num of digits
        if(numOfQueens>=100){ std::cout<<'\n'<<"    |"; }
        else if(numOfQueens>=10){ std::cout<<'\n'<<"   |"; }
        else { std::cout<<'\n'<<"  |"; }

        for( int i=0; i<numOfQueens-1; ++i ){ std::cout<<"---+"; }
        std::cout<<"---|"<<'\n';

        /* Display the x-axis number for the very bottom */
        if( y == 0 ){

            //just diff display style depending on num of digits
            if(numOfQueens>=100){ std::cout<<"     "; }
            else if(numOfQueens>=10){ std::cout<<"    "; }
            else { std::cout<<"   "; }

            for( int i=0; i<numOfQueens; ++i ){ 

                //just diff display style depending on num of digits
                if(numOfQueens>=100){ if(i+1>100){ std::cout<<" "<<i+1<<""; } else if(i+1>=10){ std::cout<<" "<<i+1<<" "; } else { std::cout<<" "<<i+1<<"  "; }}
                else if(numOfQueens>=10){ if(i+1>=10){ std::cout<<" "<<i+1<<" "; } else { std::cout<<" "<<i+1<<"  "; }}
                else { std::cout<<" "<<i+1<<"  "; }
            }
            //Display 'x' axis
            std::cout<<' '<<'x'<<'\n';
        }
    }
}